	var toon_datastore = new Ext.data.Store({
      proxy: new Ext.data.HttpProxy({
                 url: '/toons?format=ext_json',
                 method: 'GET'
             }),
      reader: new Ext.data.JsonReader({
                  root: 'toons',
                  id: 'id',
                  totalProperty: 'results'
              },
              [ {name: 'id', mapping: 'toon.id'},
							 {name: 'toon[member_id]', mapping: 'toon.member_id'},
							 {name: 'name', mapping: 'toon.name'},
							 {name: 'is_main', mapping: 'toon.is_main'},
							 {name: 'toon[spec_note]', mapping: 'toon.spec_note'},
							 {name: 'toon[level]', mapping: 'toon.level'},
							 {name: 'toon[guild]', mapping: 'toon.guild'},
							 {name: 'toon[armory_url]', mapping: 'toon.armory_url'},
							 {name: 'toon[heroes_url]', mapping: 'toon.heroes_url'},
							 {name: 'className', mapping: 'toon.toonClass.name'},
							 {name: 'toon[created_at]', mapping: 'toon.created_at'},
							 {name: 'toon[updated_at]', mapping: 'toon.updated_at'} ]),
      // turn on remote sorting
      remoteSort: true,
      sortInfo: {field: 'name', direction: 'ASC'}
  });

  var toon_column_model = new Ext.grid.ColumnModel([
    {id: 'id', header: "#", width: 20, dataIndex: 'id',hidden: true},
    {header: 'Name', dataIndex: 'name'},
    {header: 'T', dataIndex: 'is_main', width: 35,renderer: function(value) { if (value) { return 'main'; } return 'alt';}},
		{header: 'Class', dataIndex: 'className', width: 65},
    {header: 'Spec note', dataIndex: 'toon[spec_note]', width: 200},
    {header: 'Guild', dataIndex: 'toon[guild]'},
    {header: 'Armory url', dataIndex: 'toon[armory_url]'},
    {header: 'Heroes url', dataIndex: 'toon[heroes_url]'}
  ]);


  Ext.state.Manager.setProvider(new Ext.state.CookieProvider());

  var ds = toon_datastore;

  var cm = toon_column_model;
  cm.defaultSortable = true;

  // create the grid
  var centerPanel = new Ext.grid.GridPanel({
      ds: ds,
      cm: cm,
      sm: new Ext.grid.RowSelectionModel({singleSelect:true}),
      title:      'Listing Toons',
      stripeRows: true,
      viewConfig: {
          forceFit:true
      },

      // inline toolbars
      tbar:[{
          text:'New...',
					disabled: <%= current_user == nil %>,
          tooltip:'Create new Toon',
          handler: function(){
                     centerPanel.suspendEvents();
                     window.location.href = '/toons/new';
                   },
          iconCls:'add'
      }, '-', {
          text:'Edit...',
					disabled: <%= current_user == nil %>,
          tooltip:'Edit selected Toon',
          handler: function(){
                     var selected = centerPanel.getSelectionModel().getSelected();
                     if(selected) {
                       centerPanel.suspendEvents();
                       window.location.href = '/toons/' + selected.data.id + '/edit';
                     } else { 
                       alert('Please select a row first.');
                     }
                   },
          iconCls:'edit'
      },'-',{
          text:'Delete...',
					disabled: <%= current_user == nil %>,
          tooltip:'Delete selected Toon',
          handler: function(){
                     var selected = centerPanel.getSelectionModel().getSelected();
                     if(selected) {
                       if(confirm('Really delete?')) {
                          var conn = new Ext.data.Connection();
                          conn.request({
                              url: '/toons/' + selected.data.id,
                              method: 'POST',
                              params: { _method: 'DELETE'
                                        <% if protect_against_forgery? %> , <%=request_forgery_protection_token%>: '<%=form_authenticity_token%>'<% end %>
                                      },
                              success: function(response, options){ ds.reload(); },
                              failure: function(response, options){ alert('Delete operation failed.'); }
                          });
                       }
                     } else { 
                       alert('Please select a row first.');
                     }
                   },
          iconCls:'remove'
      },'->'],
      bbar: new Ext.PagingToolbar({
                pageSize: 20,
                store: ds,
                displayInfo: true,
                displayMsg: 'Record {0} - {1} of {2}',
                emptyMsg: "No records found"
      }),
      plugins:[new Ext.ux.grid.Search({
                  position:'top'
              })]
  });

  // show record on double-click
  centerPanel.on("rowdblclick", function(grid, row, e) {
    centerPanel.suspendEvents();
    window.location.href = '/toons/' + centerPanel.getStore().getAt(row).data.id;
  });

  ds.load({params: {start: 0, limit:20}});

